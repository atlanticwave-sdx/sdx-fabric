name: Build & Publish (TestPyPI â†’ PyPI)

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      target:
        description: "Choose where to publish"
        required: true
        default: "testpypi"
        type: choice
        options: [testpypi, pypi]

permissions:
  id-token: write
  contents: read

jobs:
  # ------------------------------------------------------------
  # Pull Request Build Only (no publish)
  # ------------------------------------------------------------
  pr-build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdx-client
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Verify git tags
        run: |
          git fetch --force --tags
          git describe --tags --always --dirty || true
          git tag -l | tail -n 5

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: python -m pip install --upgrade build setuptools_scm

      - name: Build sdist and wheel
        run: python -m build

  # ------------------------------------------------------------
  # Build Package Artifacts
  # ------------------------------------------------------------
  build:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdx-client
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Ensure tags present
        run: |
          git fetch --force --tags
          git describe --tags --always --dirty || true
          git tag -l | tail -n 10

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: python -m pip install --upgrade build setuptools_scm

      - name: Inject pretend version for tag builds
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "SETUPTOOLS_SCM_PRETEND_VERSION_FOR_SDXCLIENT=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"

      - name: Build sdist and wheel
        run: python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.ref_name }}
          path: sdx-client/dist/*
          if-no-files-found: error

  # ------------------------------------------------------------
  # Publish to TestPyPI
  # ------------------------------------------------------------
  publish-testpypi:
    name: Publish to TestPyPI
    if: >
      github.event_name != 'pull_request' &&
      (github.ref == 'refs/heads/main' ||
       (startsWith(github.ref_name, 'v') && contains(github.ref_name, 'rc')) ||
       (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'testpypi'))
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdx-client
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Ensure tags present
        run: |
          git fetch --force --tags
          git describe --tags --always --dirty || true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build deps
        run: python -m pip install --upgrade build setuptools_scm

      - name: Inject pretend version for tag builds
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "SETUPTOOLS_SCM_PRETEND_VERSION_FOR_SDXCLIENT=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"

      # ðŸ”¹ Bake Test Base URL into config.py
      - name: Bake SDX_BASE_URL for TestPyPI
        run: |
          python - <<'PY'
          import pathlib
          path = pathlib.Path("sdxclient/config.py")
          test_url = "https://190.103.184.194"
          path.write_text(f"# Auto-generated during TestPyPI build\nSDX_BASE_URL = '{test_url}'\n")
          print("Baked SDX_BASE_URL =", test_url)
          PY

      - name: Build (TestPyPI variant)
        run: python -m build

      - name: Publish to TestPyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          packages-dir: sdx-client/dist

  # ------------------------------------------------------------
  # Publish to PyPI
  # ------------------------------------------------------------
  publish-pypi:
    name: Publish to PyPI
    if: >
      github.event_name != 'pull_request' &&
      ((startsWith(github.ref_name, 'v') && !contains(github.ref_name, 'rc')) ||
       (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'pypi'))
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdx-client
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Ensure tags present
        run: |
          git fetch --force --tags
          git describe --tags --always --dirty || true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build deps
        run: python -m pip install --upgrade build setuptools_scm

      - name: Inject pretend version for tag builds
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "SETUPTOOLS_SCM_PRETEND_VERSION_FOR_SDXCLIENT=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"

      - name: Build (Production)
        run: python -m build

      - name: Publish to PyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          packages-dir: sdx-client/dist

