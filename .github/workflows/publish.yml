name: Build & Publish (TestPyPI â†’ PyPI)

on:
  push:
    branches: ["main"]                # publish to TestPyPI on merge to main
    tags:
      - "v*.*.*"                      # publish to PyPI on version tags
  pull_request:
    branches: ["main"]                # build-only on PRs targeting main
  workflow_dispatch:                  # manual trigger from Actions tab
    inputs:
      target:
        description: "Choose where to publish"
        required: true
        default: "testpypi"
        type: choice
        options:
          - testpypi
          - pypi

permissions:
  id-token: write                     # REQUIRED for OIDC Trusted Publishing
  contents: read

jobs:
  # ----------------------------------------------------
  # Build on pull requests only (no publish)
  # ----------------------------------------------------
  pr-build:
    name: Build on pull_request (no publish)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdx-client
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: python -m pip install --upgrade build setuptools_scm

      - name: Build sdist and wheel
        run: python -m build

  # ----------------------------------------------------
  # Build artifacts for push/tag/manual
  # ----------------------------------------------------
  build:
    name: Build package artifacts
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdx-client
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Ensure tags are present
        run: |
          git fetch --force --tags
          git describe --tags --always --dirty || true
          git tag -l | tail -n 10

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: python -m pip install --upgrade build setuptools_scm

      - name: Inject pretend version for tag builds
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "SETUPTOOLS_SCM_PRETEND_VERSION_FOR_SDXCLIENT=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"

      - name: Build sdist and wheel
        run: python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  # ----------------------------------------------------
  # Publish to TestPyPI
  # ----------------------------------------------------
  publish-testpypi:
    name: Publish to TestPyPI
    # Runs on:
    # - push to main (merge)
    # - OR manual dispatch with target == testpypi
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'testpypi'))
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdx-client
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Ensure NOT a final release tag
        run: |
          python - <<'PY'
          import subprocess, re, sys
          ref = subprocess.check_output(
              ["git","describe","--tags","--dirty","--always"],
              text=True
          ).strip()
          if re.fullmatch(r"v\\d+\\.\\d+\\.\\d+", ref):
              sys.exit(f"Ref {ref} is a final tag; TestPyPI expects a dev/pre build.")
          print(f"OK: {ref} is not a final tag")
          PY

      - name: Bake SDX_BASE_URL for TestPyPI
        run: |
          python - <<'PY'
          import pathlib
          test_url = "https://190.103.184.194"
          path = pathlib.Path("sdxclient/config.py")
          path.write_text(f"# Auto-generated during TestPyPI build\nSDX_BASE_URL = '{test_url}'\n")
          print("Baked SDX_BASE_URL =", test_url)
          PY

      - name: Publish to TestPyPI (OIDC Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  # ----------------------------------------------------
  # Publish to PyPI
  # ----------------------------------------------------
  publish-pypi:
    name: Publish to PyPI
    # Runs on:
    # - tag push (vX.Y.Z)
    # - OR manual dispatch with target == pypi
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'pypi'))
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdx-client
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Ensure final release tag (vX.Y.Z)
        run: |
          python - <<'PY'
          import subprocess, re, sys
          ref = subprocess.check_output(
              ["git","describe","--tags","--dirty","--always"],
              text=True
          ).strip()
          if not re.fullmatch(r"v\\d+\\.\\d+\\.\\d+", ref):
              sys.exit(f"Ref {ref} is not a clean final tag vX.Y.Z (got {ref}).")
          print(f"OK: {ref} is a final tag")
          PY

      - name: Publish to PyPI (OIDC Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

