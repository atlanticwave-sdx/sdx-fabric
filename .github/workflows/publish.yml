name: Build & Publish (TestPyPI → PyPI)

on:
  push:
    branches: ["main"]          # pre-releases (rc) → TestPyPI
    tags:
      - "v*.*.*"                # e.g., v0.10.0 → PyPI

permissions:
  id-token: write               # REQUIRED for OIDC Trusted Publishing
  contents: read

env:
  # Set your endpoints here (Actions will export SDX_BASE_URL per job)
  TEST_SDX_BASE_URL: http://190.103.184.194
  PROD_SDX_BASE_URL: https://sdxapi.atlanticwave-sdx.ai

jobs:
  build:
    name: Build package artifacts
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdx-client        # your package lives in this subdir
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tool
        run: python -m pip install --upgrade build

      - name: Build sdist and wheel
        run: python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: sdx-client/dist/*

  publish-testpypi:
    name: Publish to TestPyPI (on main)
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
        # path defaults to ./dist

      # Guard: ensure pre-release (rc) when publishing from main
      - name: Ensure pre-release version on main
        run: |
          python - <<'PY'
          import sys, pathlib
          import tomllib
          data = tomllib.loads(pathlib.Path("sdx-client/pyproject.toml").read_text())
          ver = data["project"]["version"]
          if "rc" not in ver:
              print(f"ERROR: main pushes must use pre-release (found {ver})")
              sys.exit(1)
          PY

      - name: Set test base URL for this job
        run: echo "SDX_BASE_URL=${{ env.TEST_SDX_BASE_URL }}" >> $GITHUB_ENV

      - name: Publish to TestPyPI (Trusted Publishing via OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  publish-pypi:
    name: Publish to PyPI (on tag)
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist

      # Guard: ensure final (non-rc) on tagged release
      - name: Ensure final version on tag
        run: |
          python - <<'PY'
          import sys, pathlib
          import tomllib
          data = tomllib.loads(pathlib.Path("sdx-client/pyproject.toml").read_text())
          ver = data["project"]["version"]
          if "rc" in ver:
              print(f"ERROR: tagged releases must be final (found {ver})")
              sys.exit(1)
          PY

      - name: Set prod base URL for this job
        run: echo "SDX_BASE_URL=${{ env.PROD_SDX_BASE_URL }}" >> $GITHUB_ENV

      - name: Publish to PyPI (Trusted Publishing via OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

